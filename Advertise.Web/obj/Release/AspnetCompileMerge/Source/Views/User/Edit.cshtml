@* Generator: MvcView GeneratePrettyNames: true *@
@using System.Web.UI.WebControls
@using Advertise.Core.Extensions
@using Microsoft.AspNet.Identity
@model Advertise.Core.Models.User.UserEditViewModel
@{
    var x = "true";
    if (HttpContext.Current.Request.Cookies.Get(HttpContext.Current.User.Identity.GetUserId() + "_User_Edit_IsMyEdit") != null)
    {
        x = HttpContext.Current.Request.Cookies.Get(HttpContext.Current.User.Identity.GetUserId() + "_User_Edit_IsMyEdit").Value;
    }
    if (x != "true")
    {
        Layout = MVC.Shared.Views.SiteLayout._PanelLayout;
    }
    else
    {
        Layout = MVC.Shared.Views.SiteLayout._ProfileLayout;
    }

    ViewBag.Title = Admin.UserProfileEdit;
}
<div class="@if (ViewBag.IsMyEdit != true) {<text>dashboard-content</text>} else {<text>profile-content</text>}">
    <div class="headline buttons primary">
        <h4>@Admin.EditUsers</h4>
        <button form="editUser" type="submit" class="button primary disabled-btn-link" disabled="disabled">
            <i class="fa fa-save"></i>
            <span>@Admin.Save</span>
        </button>
        @if (ViewBag.IsMyEdit != true)
        {
            <a class="button primary" href="@Url.Action(MVC.User.List())">
                <i class="fa fa-undo"></i>
                <span>@Admin.Return</span>
            </a>
        }
    </div>
    <div class="form-box-item profile-form">
        <form id="editUser" action="@if (ViewBag.IsMyEdit != true) {<text>@Url.Action(MVC.User.Edit())</text>} else {<text>@Url.Action(MVC.User.EditMe())</text>}" method="Post">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary()
            <input type="hidden" id="Address_Id" name="Address.Id" value="@Model.Address.Id" />
            <input type="hidden" id="Id" name="Id" value="@Model.Id" />
            <input type="hidden" id="OrginalUserName" name="OrginalUserName" value="@Model.UserName" />
            @if (Model.IsSetUserName )
            {
                <div class="input-container fixed-height">
                    <label for="UserName" class="rl-label">
                        * @Admin.UserUserName
                        <i class="fa fa-question-circle tooltipster" title="@Admin.ItShowsCompanyDomain"></i>
                    </label>
                    <input type="text" id="UserName" name="UserName" value="@Model.UserName" placeholder="@Admin.UserUserName" data-val="true" data-val-required="@Admin.RequiredDomain" data-val-length="@Admin.MessageLengthDomain" data-val-length-min="6" data-val-length-max="50" data-val-regex-pattern="^([A-Za-z]{1}[A-Za-z0-9\-]{1,}[A-Za-z0-9]{1,})$" data-val-regex="@Admin.MessageRegexDomain" />
                    <span class="field-validation-error" data-valmsg-for="UserName" data-valmsg-replace="true"></span>
                </div>
            }
            else if (Model.IsSetUserName != true )
            {
                <label for="UserName" class="rl-label center-rl-label">
                    @Admin.UserUserName:
                    <a href="@Url.Action(MVC.User.Detail(Model.UserName))">
                        <span>@Model.UserName</span>
                    </a>
                </label>
                <input type="hidden" Name="UserName" value="@Model.UserName" />
            }
            <div class="input-container half fixed-height">
                <label for="FirstName" class="rl-label">@Admin.FirstName</label>
                <input type="text" id="FirstName" name="FirstName" value="@Model.FirstName"  @if(ViewBag.IsMyEdit == true) {<text>data-val="true" data-val-required="@Admin.RequiredFirstName" </text>} placeholder="@Admin.FirstName" class="tooltipster" title="@Admin.ItShowsFirstName" />
                <span class="field-validation-error" data-valmsg-for="FirstName" data-valmsg-replace="true"></span>
            </div>
            <div class="input-container half fixed-height">
                <label for="LastName" class="rl-label">@Admin.LastName</label>
                <input type="text" id="LastName" name="LastName" value="@Model.LastName" placeholder="@Admin.LastName" class="tooltipster" title="@Admin.ItShowsLastName" @if(ViewBag.IsMyEdit == true) {<text>data-val="true" data-val-required="@Admin.RequiredLastName" </text>} />

                <span class="field-validation-error" data-valmsg-for="LastName" data-valmsg-replace="true"></span>
            </div>
            <div class="input-container half fixed-height">
                <label for="NationalCode" class="rl-label">@Admin.NationalCode</label>
                <input type="text" id="NationalCode" name="NationalCode" value="@Model.NationalCode" placeholder="@Admin.ExampleNationalCode" class="tooltipster" title="@Admin.ItShowsNationalCode" data-val="true" data-val-length="@Admin.MessageLengthNationalCode" data-val-length-min="10" data-val-length-max="10" data-pattern="numeric" />
                <span class="field-validation-error" data-valmsg-for="NationalCode" data-valmsg-replace="true"></span>
            </div>
            <div class="input-container half fixed-height">
                <label for="Gender" class="rl-label">@Admin.Gender :</label>
                <select id="Gender" name="Gender">
                    @foreach (var type in Model.GenderList)
                    {
                        <option value="@type.Value" @if (Model.Gender.ToString() == type.Value) { <text> selected="selected" </text> }>@type.Text</option>
                    }
                </select>
            </div>
            <div class="input-container half fixed-height">
                <label for="HomeNumber" class="rl-label">@Admin.Phone</label>
                <input type="text" id="HomeNumber" name="HomeNumber" value="@Model.HomeNumber" placeholder="@Admin.ExamplePhoneNumber" class="tooltipster" title="@Admin.ItShowsPhoneNumber" data-val="true" data-val-length="@Admin.MessageLengthPhoneNumber" data-val-length-min="11" data-val-length-max="11" data-pattern="numeric" />
                <span class="field-validation-error" data-valmsg-for="HomeNumber" data-valmsg-replace="true"></span>
            </div>
            <div class="input-container half fixed-height">
                <label for="PhoneNumber" class="rl-label">@Admin.Mobile</label>
                <input type="text" id="PhoneNumber" name="PhoneNumber" value="@Model.PhoneNumber" placeholder="@Admin.ExampleMobileNumber" class="tooltipster" title="@Admin.ItShowsMobileNumber" data-val="true" data-val-length="@Admin.MessageLengthMobileNumber" data-val-length-min="11" data-val-length-max="11" data-pattern="numeric" />
                <span class="field-validation-error" data-valmsg-for="PhoneNumber" data-valmsg-replace="true"></span>
            </div>
            <div class="input-container half">
                <label for="file" class="rl-label tooltipster" title="@Admin.ItShowsPreviewImage">@Admin.UploadImage</label>
                @Html.Partial(MVC.Shared.Views._FineUploaderTemplate)
                <div name="files" id="files" data-action="uploaderUser" data-event="load" data-param="edit"></div>
            </div>
            <div class="clearboth"></div>
            <br><br>
            <div class="input-container half">
                <input type="hidden" id="Address_Longitude" name="Address.Longitude" value="@Model.Address.Longitude.ZeroIfNull()" />
                <input type="hidden" id="Address_Latitude" name="Address.Latitude" value="@Model.Address.Latitude.ZeroIfNull()" />
                <div id="setMap" class="map-holder"></div>
            </div>
            <div class="input-container half fixed-height">
                <label for="ProvinceId" class="rl-label tooltipster" title="@Admin.ItShowsProvince">@Admin.Province</label>
                <input type="hidden" name="ProvinceId" id="ProvinceId" value="@Model.Address.City.ParentId" />
                <select id="Address_City_ParentId" name="Address.City.ParentId" data-action="selectProvince" data-event="change"  data-val="true" data-val-required="@Admin.RequiredProvince">
                    <option  selected disabled>-- @Admin.Choose --</option>
                    @foreach (var province in Model.AddressProvince)
                    {
                        <option value="@province.Value" @if (province.Value == Model.Address.City.ParentId.ToString()) { <text> selected</text>}>@province.Text</option>
                    }
                </select>
                <span class="field-validation-error" data-valmsg-for="ProvinceId" data-valmsg-replace="true"></span>

            </div>
            <div class="input-container half fixed-height">
                <label for="CityId" class="rl-label tooltipster" title="@Admin.ItShowsCity">@Admin.City</label>
                <input type="hidden" name="CityId" id="CityId" value="@Model.Address.City.Id" />
                <select id="Address_City_Id" name="Address.City.Id" data-action="selectCity"  data-val="true" data-val-required="@Admin.RequiredCity" data-event="load">
                    <option >-- @Admin.Choose --</option>
                </select>
                <span class="field-validation-error" data-valmsg-for="CityId" data-valmsg-replace="true"></span>

            </div>
            <div class="input-container half address-area">
                <label for="Address_Extra" class="rl-label">@Admin.Address</label>
                <textarea rows="2" id="Address_Extra" name="Address.Extra" class="info-address-textarea tooltipster" value="@Model.Address.Extra" title="@Admin.ItShowsAddress" placeholder="@Admin.Address">
                    @Model.Address.Extra
                </textarea>
            </div>
            <div class="input-container half fixed-height">
                <label for="Address_PostalCode" class="rl-label">@Admin.PostalCode</label>
                <input type="text" id="Address_PostalCode" name="Address.PostalCode" placeholder="@Admin.ExamplePostalCode" value="@Model.Address.PostalCode" class="tooltipster" title="@Admin.ItShowsPostalCode" data-val="true" data-val-length="@Admin.MessageLengthPostalCode" data-val-length-min="10" data-val-length-max="10" data-pattern="numeric" />
                <span class="field-validation-error" data-valmsg-for="Address_PostalCode" data-valmsg-replace="true"></span>
            </div>
            <div class="clearboth"></div>
            @if (ViewBag.IsMyEdit != true)
            {
                <br><br>
                <div class="input-container half">
                    <label for="BannedReason" class="rl-label">@Admin.BannedReason</label>
                    <input type="text" id="BannedReason" value="@Model.BannedReason" name="BannedReason" placeholder="@Admin.BannedReason" />
                </div>
                    <div class="input-container half">
                        <label for="IsSystemAccount" class="rl-label">@Admin.SystemManager</label>
                        <input type="checkbox" id="IsSystemAccount" name="IsSystemAccount" value="true" />
                        <input type="hidden" name="IsSystemAccount" value="false" />
                    </div>
                    <div class="input-container half">
                        <label for="IsBan" class="rl-label">@Admin.Ban</label>
                        <input type="checkbox" id="IsBan" name="IsBan" value="true" checked="@Model.IsBan" />
                        <input type="hidden" name="IsBan" value="false" />
                    </div>

                    <div class="input-container half">
                        <label for="RoleId" class="rl-label">@Admin.UserRole</label>
                        <select id="RoleId" name="RoleId">
                            <option disabled="disabled">@Admin.UserRole</option>
                            @foreach (var role in Model.RoleList)
                            {
                                <option value="@role.Value" @if (Model.RoleId.ToString() == role.Value) { <text> selected="selected" </text>    }>@role.Text</option>
                            }
                        </select>
                    </div>
                    <div class="input-container"></div>
                    <div class="clearboth"></div>
            }
        </form>
    </div>
</div>
@section scripts {
    <script async defer src='https://maps.googleapis.com/maps/api/js?key=AIzaSyDsVAy5ATsGkBA11NPQWSakpy0BiNuBPTc&callback=mapSet'></script>
}