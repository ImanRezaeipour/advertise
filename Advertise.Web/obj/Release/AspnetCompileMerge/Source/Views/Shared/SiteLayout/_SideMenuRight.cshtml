@* Generator: MvcView GeneratePrettyNames: true *@
@using Auth = Advertise.Service.Services.Permissions.AccessPermission.AccessPermissionConst;
@model Advertise.Core.Models.Home.ProfileMenuViewModel
<div id="account-options-menu" class="side-menu right closed">
    <svg class="svg-plus">
        <use xlink:href="#svg-plus"></use>
    </svg>
    @Html.Action(MVC.User.SideMenuHeader())
    <ul class="dropdown dark hover-effect interactive">
        @if (User.IsInRole(Auth.CanViewProfile))
        {
            <li class="dropdown-item interactive">
                <a href="@Url.Action(MVC.Home.ProfilePage())">
                    <span class="sl-icon fa fa-user-circle"></span>
                    <span>@Admin.MyProfile</span>
                </a>
            </li>
        }
        @if (User.IsInRole(Auth.CanManageCompany))
        {
            <li class="dropdown-item interactive">
                <a href="#">
                    <span class="sl-icon fa fa-briefcase"></span>
                    <span>@Admin.ManageCompany</span>
                    <svg class="svg-arrow">
                        <use xlink:href="#svg-arrow"></use>
                    </svg>
                </a>
                <ul class="inner-dropdown">
                    @if (User.IsInRole(Auth.CanMyEditCompany))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.Company.EditMe())">
                                <i class="fa fa-bank"></i>
                                <span>@Admin.MyCompany</span>
                            </a>
                        </li>
                    }
                   
                    @if (User.IsInRole(Auth.CanListMeCompanyAttachment))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.CompanyAttachment.ListMe())">
                                <i class="fa fa-paperclip"></i>
                                <span>@Admin.Files</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanListMeCompanyImage))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.CompanyImage.ListMe())">
                                <i class="fa fa-image"></i>
                                <span>@Admin.GalleryImages</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanListMeCompanyVideo))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.CompanyVideo.ListMe())">
                                <i class="fa fa-video-camera fa-flip-horizontal"></i>
                                <span>@Admin.GalleryVideos</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanMyListQustionCompany))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.CompanyQuestion.ListMe())">
                                <i class="fa fa-comments-o"></i>
                                <span>@Admin.QAs</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanListMeConversation))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.CompanyConversation.ListMe())">
                                <i class="fa fa-comments"></i>
                                <span>@Admin.MyConversations</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanMyListCompanySocial))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.CompanySocial.Edit())">
                                <i class="fa fa-sitemap"></i>
                                <span>@Admin.SocialNetworks</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanListMeCompanyFollower))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.CompanyFollow.MyFollowerList())">
                                <i class="fa fa-users"></i>
                                <span>@Admin.Followers</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanViewProfile))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.Company.Near())">
                                <i class="fa fa-map-marker"></i>
                                <span>@Admin.StoresNearMe</span>
                            </a>
                        </li>
                    }
                </ul>
            </li>
        }
        @if (User.IsInRole(Auth.CanManageProduct))
        {
            <li class="dropdown-item interactive">
                <a href="#">
                    <span class="sl-icon fa fa-dropbox"></span>
                    <span>@Admin.ManageProducts</span>
                    <svg class="svg-arrow">
                        <use xlink:href="#svg-arrow"></use>
                    </svg>
                </a>
                <ul class="inner-dropdown">
                    @if (User.IsInRole(Auth.CanViewListMeProduct))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.Product.ListMe())">
                                <i class="fa fa-cube"></i>
                                <span>@Admin.MyProduct</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanListMeExistProduct))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.Product.ListMe())">
                                <i class="fa fa-check-square"></i>
                                <span>@Admin.MyProductsExistance</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanListMeProductLiker))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.ProductLike.LikerListMe())">
                                <i class="fa fa-heart"></i>
                                <span>@Admin.Likers</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanViewMyListProductComment))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.ProductComment.ListMe())">
                                <i class="fa fa-commenting-o"></i>
                                <span>@Admin.Comments</span>
                            </a>
                        </li>
                    }
                </ul>
            </li>
        }
        @if (User.IsInRole(Auth.CanListMyProductLike) || User.IsInRole(Auth.CanTogglecategoryFollow) || User.IsInRole(Auth.CanMyItemListCompanyFollow) || User.IsInRole(Auth.CanListMeNotification))
        {
            <li class="dropdown-item interactive">
                <a href="#">
                    <span class="sl-icon fa fa-heartbeat"></span>
                    <span>@Admin.ManageActivities</span>
                    <svg class="svg-arrow">
                        <use xlink:href="#svg-arrow"></use>
                    </svg>
                </a>
                <ul class="inner-dropdown">
                    @if (User.IsInRole(Auth.CanListMyProductLike))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.CategoryFollow.MyFollowList())">
                                <i class="fa fa-heart"></i>
                                <span>@Admin.MyFavoriteCategories</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanTogglecategoryFollow))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.CategoryFollow.MyFollowList())">
                                <i class="fa fa-th"></i>
                                <span>@Admin.MyFollowingCategories</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanMyItemListCompanyFollow))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.CompanyFollow.MyFollowList())">
                                <i class="fa fa-bank"></i>
                                <span>@Admin.MyFollowingCompanies</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanListMeNotification))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.Notification.ListMe())">
                                <i class="fa fa-sticky-note fa-flip-horizontal"></i>
                                <span>@Admin.Notifications</span>
                            </a>
                        </li>
                    }
                </ul>
            </li>
        }
        @if (User.IsInRole(Auth.CanManageTransaction))
        {
            <li class="dropdown-item interactive">
                <a href="#">
                    <span class="sl-icon fa fa-money"></span>
                    <span>@Admin.ManageTransactions</span>
                    <svg class="svg-arrow">
                        <use xlink:href="#svg-arrow"></use>
                    </svg>
                </a>
                <ul class="inner-dropdown">
                    @if (User.IsInRole(Auth.CanListMeBag))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.Bag.MyItemlist())">
                                <i class="fa fa-cart-arrow-down fa-flip-horizontal"></i>
                                <span>@Admin.MyCart</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanListMeReceipt))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.Receipt.ListMe())">
                                <i class="fa fa-shopping-bag"></i>
                                <span>@Admin.PreviousPurchases</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanViewMySaleStatistics))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.Company.SaleStatisticsMe())">
                                <i class="fa fa-line-chart fa-flip-horizontal"></i>
                                <span>@Admin.SalesStatistics</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanListMeAccountNumber))
                    {
                        <li class="inner-dropdown-item">
                            <a href="#">
                                <i class="fa fa-credit-card-alt"></i>
                                <span>@Admin.AccountNumbers</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanViewMyBudget))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.UserBudget.Detail())">
                                <i class="fa fa-area-chart fa-flip-horizontal"></i>
                                <span>@Admin.MyBudget</span>
                            </a>
                        </li>
                    }
                </ul>
            </li>
        }
        @if (User.IsInRole(Auth.CanEditMeUserMetaInfo) || User.IsInRole(Auth.CanChangePassword))
        {
            <li class="dropdown-item interactive">
                <a href="#">
                    <span class="sl-icon fa fa-gear"></span>
                    <span>@Admin.Settings</span>
                    <svg class="svg-arrow">
                        <use xlink:href="#svg-arrow"></use>
                    </svg>
                </a>
                <ul class="inner-dropdown">
                    @if (User.IsInRole(Auth.CanEditMeUserMetaInfo))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.User.EditMe())">
                                <i class="fa fa-user"></i>
                                <span>@Admin.Account</span>
                            </a>
                        </li>
                    }
                    @if (User.IsInRole(Auth.CanChangePassword))
                    {
                        <li class="inner-dropdown-item">
                            <a href="@Url.Action(MVC.User.ChangePassword())">
                                <i class="fa fa-asterisk"></i>
                                <span>@Admin.ChangePassWord</span>
                            </a>
                        </li>
                    }
                </ul>
            </li>
        }
    </ul>
</div>