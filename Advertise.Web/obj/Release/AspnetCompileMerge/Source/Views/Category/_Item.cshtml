@* Generator: MvcView GeneratePrettyNames: true *@
@using Advertise.Core.Extensions
@using Advertise.Service.Services.File
@using Auth = Advertise.Service.Services.Permissions.AccessPermission.AccessPermissionConst;
@model Advertise.Core.Models.Category.CategoryViewModel
@{
    Layout = null;
}
<div class="landing-items category-items">
    <div class="product-item column landing-column">
        <div class="part-eight">
            <input type="hidden" id="Alias" name="Alias" value="@Model.Alias"/>
            @if (User.IsInRole(Auth.CanEditCategory) || User.IsInRole(Auth.CanDeleteCategory))
            {
                <div class="item-edit-wrapper">
                    <i class="fa fa-pencil-square"></i>
                    <ul class="item-edit-list">
                        @if (User.IsInRole(Auth.CanEditCategory))
                        {
                            <li>
                                <a href="@Url.Action(MVC.Category.Edit(Model.Alias))">
                                    <span>@Admin.Edit</span>
                                    <i class="fa fa-pencil fa-flip-horizontal"></i>
                                </a>
                            </li>
                        }
                        @if (User.IsInRole(Auth.CanDeleteCategory))
                        {
                            <li>
                                <a href="#" data-action="removeItem" data-event="click" data-param="category" data-param-id="@Model.Alias">
                                    <span>@Admin.Delete</span>
                                    <i class="fa fa-trash"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
        <div class="part-nine">
            <div class="sharing-item-li">
                <i class="fa fa-share-alt-square"></i>
                <ul class="item-share-list">
                    <li>
                        <a href="@Url.Action(MVC.Category.Detail(Model.Alias)).AddSlug(Model.MetaTitle).PlusWord("&text=").PlusWord(Model.Title).BeforeWord("https://telegram.me/share/url?url=https://novinak.com")">
                            <span>@Admin.Telegram</span>
                            <i class="sharings fa fa-telegram"></i>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action(MVC.Category.Detail(Model.Alias)).AddSlug(Model.MetaTitle).BeforeWord("https://plus.google.com/share?url=https://novinak.com")">
                            <span>@Admin.GPlus</span>
                            <i class="sharings fa fa-google-plus"></i>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action(MVC.Category.Detail(Model.Alias)).AddSlug(Model.MetaTitle).BeforeWord("https://www.facebook.com/sharer/sharer.php?u=https://novinak.com")">
                            <span>@Admin.Facebook2</span>
                            <i class="sharings fa fa-facebook"></i>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.Action(MVC.Category.Detail(Model.Alias)).AddSlug(Model.MetaTitle).BeforeWord("https://twitter.com/home?status=https://novinak.com")">
                            <span>@Admin.Twitter2</span>
                            <i class="sharings fa fa-twitter"></i>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="product-preview-actions">
            <figure class="product-preview-image">
                @if (Model.ImageFileName != null)
                {
                    <a href="@Url.Action(MVC.Category.Detail(Model.Alias)).AddSlug(Model.Title)">
                        <div class="item-preview-image">
                            <img src="@FileConst.ImagesWebPath.PlusWord(Model.ImageFileName)" alt="@Model.Title.PlusWord(" ").PlusWord(Model.Description)">
                        </div>
                    </a>
                }
                else
                {
                    <div class="item-preview-image">
                        <img src="@FileConst.NoPreview" alt="category without any preview image">
                    </div>
                }
            </figure>
        </div>
        <a class="novinak-title-link" href="@Url.Action(MVC.Category.Detail(Model.Alias)).AddSlug(Model.MetaTitle)">
            <p class="novinak-title text-header">@Model.Title</p>
        </a>
        <a href="javascript:void(0)">
            <p class="part-one"><span>@Admin.Priority.PlusWord(": ")</span>@Model.Order</p>
        </a>
        <p class="part-two">@Model.CompanyCount.ToString().PlusWord("   ")<span>@Admin.Businesses2</span> <i class="fa fa-briefcase"></i></p>
        <p class="part-three">@Model.ProductCount.ToString().PlusWord("   ")<span>@Admin.ProductsOrServices</span> <i class="fa fa-cubes"></i></p>
        <hr class="line-separator item-footer">
        <div class="part-four">
            <figure class="user-avatar small">
                @if (Model.ParentImageFileName != null)
                {
                    <a href="@Url.Action(MVC.Category.Detail(Model.ParentAlias)).AddSlug(Model.ParentMetaTitle)">
                        <div class="novinak-owner-image">
                            <img src="@FileConst.ImagesWebPath.PlusWord(Model.ParentImageFileName)" alt="@Model.ParentTitle">
                        </div>
                    </a>
                }
                else
                {
                    <div class="novinak-owner-image">
                        <img src="@FileConst.NoPreview" alt="category without image">
                    </div>
                }
            </figure>
            <a href="@Url.Action(MVC.Category.Detail(Model.ParentAlias)).AddSlug(Model.ParentMetaTitle)" class="tooltipster" title="@Model.ParentTitle">
                <p class="part-five text-header tiny">@Model.ParentTitle</p>
            </a>
        </div>
        <div class="part-six">
            <div class="follow-button-wrapper">
                <input id="categoryId" type="hidden" value="@Model.Id" />
                <a @if (User.Identity.IsAuthenticated != true) { <text> href="@Url.Action(MVC.Account.RegisterByEmail())" </text>  } else { <text> href="javascript:void(0)" data-action="toggleFollowCategory" data-event="click" data-follow="@Admin.Follow" data-unfollow="@Admin.Unfollow" </text> } class="follow-button @if (Model.InitFollow) {<text>followed-btn</text>} else {<text>unfollowed-btn</text>}">
                    @if (Model.InitFollow) {<text>@Admin.Unfollow</text>} else {<text>@Admin.Follow</text>}
                </a>
            </div>
        </div>
        <div class="clearboth"></div>
    </div>
</div>